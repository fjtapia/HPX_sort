11:49:24 **** Build of configuration Release for project benchmark ****
make all 
Building file: /home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp
Invoking: GCC C++ Compiler
g++ -std=c++1y -I/home/francisco/Code/hpx -I/home/francisco/Code/HPX_sort/benchmark/include -I/home/francisco/Code/HPX_sort/include -O3 -Wall -c -fmessage-length=0 -march=native -MMD -MP -MF"benchmark.d" -MT"benchmark.d" -o "benchmark.o" "/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp"
In file included from /home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:36:0,
                 from /home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:30:
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/pss_common.h: In function ‘void pss::internal::serial_move_merge(RandomAccessIterator1, RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator2, RandomAccessIterator3, Compare)’:
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/pss_common.h:58:21: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]
                     if( ++ys==ye ) break;{};
                     ^~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/pss_common.h:58:42: note: ...this statement, but the latter is misleadingly indented as if it is guarded by the ‘if’
                     if( ++ys==ye ) break;{};
                                          ^
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/pss_common.h:62:21: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]
                     if( ++xs==xe ) goto movey;{};
                     ^~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/pss_common.h:62:47: note: ...this statement, but the latter is misleadingly indented as if it is guarded by the ‘if’
                     if( ++xs==xe ) goto movey;{};
                                               ^
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/pss_common.h:53:11: warning: suggest explicit braces to avoid ambiguous ‘else’ [-Wparentheses]
         if( ys!=ye )
           ^
In file included from /home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:30:0:
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::stable_sort_task(RandomAccessIterator1, RandomAccessIterator1, RandomAccessIterator2, int, Compare) [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> >; RandomAccessIterator2 = long unsigned int*; Compare = std::less<long unsigned int>]’:
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:134:36:   required from ‘void pss::parallel_stable_sort(RandomAccessIterator, RandomAccessIterator, Compare) [with RandomAccessIterator = __gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> >; Compare = std::less<long unsigned int>]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:269:31:   required from ‘int Prueba(std::vector<Future>&, compare) [with IA = long unsigned int; compare = std::less<long unsigned int>]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:135:45:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:93:17: warning: ‘pss::internal::stable_sort_task<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> >, long unsigned int*, std::less<long unsigned int> >::inplace’ will be initialized after [-Wreorder]
     signed char inplace;
                 ^~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:92:13: warning:   ‘std::less<long unsigned int> pss::internal::stable_sort_task<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> >, long unsigned int*, std::less<long unsigned int> >::comp’ [-Wreorder]
     Compare comp;
             ^~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:95:5: warning:   when initialized here [-Wreorder]
     stable_sort_task(RandomAccessIterator1 xs_, RandomAccessIterator1 xe_, RandomAccessIterator2 zs_, int inplace_, Compare comp_ ) :
     ^~~~~~~~~~~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::stable_sort_task(RandomAccessIterator1, RandomAccessIterator1, RandomAccessIterator2, int, Compare) [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; RandomAccessIterator2 = std::__cxx11::basic_string<char>*; Compare = std::less<std::__cxx11::basic_string<char> >]’:
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:134:36:   required from ‘void pss::parallel_stable_sort(RandomAccessIterator, RandomAccessIterator, Compare) [with RandomAccessIterator = __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; Compare = std::less<std::__cxx11::basic_string<char> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:269:31:   required from ‘int Prueba(std::vector<Future>&, compare) [with IA = std::__cxx11::basic_string<char>; compare = std::less<std::__cxx11::basic_string<char> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:163:51:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:93:17: warning: ‘pss::internal::stable_sort_task<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >, std::__cxx11::basic_string<char>*, std::less<std::__cxx11::basic_string<char> > >::inplace’ will be initialized after [-Wreorder]
     signed char inplace;
                 ^~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:92:13: warning:   ‘std::less<std::__cxx11::basic_string<char> > pss::internal::stable_sort_task<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >, std::__cxx11::basic_string<char>*, std::less<std::__cxx11::basic_string<char> > >::comp’ [-Wreorder]
     Compare comp;
             ^~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:95:5: warning:   when initialized here [-Wreorder]
     stable_sort_task(RandomAccessIterator1 xs_, RandomAccessIterator1 xe_, RandomAccessIterator2 zs_, int inplace_, Compare comp_ ) :
     ^~~~~~~~~~~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::stable_sort_task(RandomAccessIterator1, RandomAccessIterator1, RandomAccessIterator2, int, Compare) [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<1u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<1u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<1u> > > >; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<1u>*; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<1u> >]’:
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:134:36:   required from ‘void pss::parallel_stable_sort(RandomAccessIterator, RandomAccessIterator, Compare) [with RandomAccessIterator = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<1u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<1u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<1u> > > >; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<1u> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:269:31:   required from ‘int Prueba(std::vector<Future>&, compare) [with IA = hpx::parallel::tr1::detail::util::int_array<1u>; compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<1u> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:183:11:   required from ‘void Generator(uint64_t) [with IA = hpx::parallel::tr1::detail::util::int_array<1u>; uint64_t = long unsigned int]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:115:43:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:93:17: warning: ‘pss::internal::stable_sort_task<__gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<1u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<1u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<1u> > > >, hpx::parallel::tr1::detail::util::int_array<1u>*, hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<1u> > >::inplace’ will be initialized after [-Wreorder]
     signed char inplace;
                 ^~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:92:13: warning:   ‘hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<1u> > pss::internal::stable_sort_task<__gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<1u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<1u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<1u> > > >, hpx::parallel::tr1::detail::util::int_array<1u>*, hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<1u> > >::comp’ [-Wreorder]
     Compare comp;
             ^~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:95:5: warning:   when initialized here [-Wreorder]
     stable_sort_task(RandomAccessIterator1 xs_, RandomAccessIterator1 xe_, RandomAccessIterator2 zs_, int inplace_, Compare comp_ ) :
     ^~~~~~~~~~~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::stable_sort_task(RandomAccessIterator1, RandomAccessIterator1, RandomAccessIterator2, int, Compare) [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<1u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<1u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<1u> > > >; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<1u>*; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<1u> >]’:
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:134:36:   required from ‘void pss::parallel_stable_sort(RandomAccessIterator, RandomAccessIterator, Compare) [with RandomAccessIterator = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<1u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<1u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<1u> > > >; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<1u> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:269:31:   required from ‘int Prueba(std::vector<Future>&, compare) [with IA = hpx::parallel::tr1::detail::util::int_array<1u>; compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<1u> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:186:11:   required from ‘void Generator(uint64_t) [with IA = hpx::parallel::tr1::detail::util::int_array<1u>; uint64_t = long unsigned int]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:115:43:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:93:17: warning: ‘pss::internal::stable_sort_task<__gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<1u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<1u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<1u> > > >, hpx::parallel::tr1::detail::util::int_array<1u>*, hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<1u> > >::inplace’ will be initialized after [-Wreorder]
     signed char inplace;
                 ^~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:92:13: warning:   ‘hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<1u> > pss::internal::stable_sort_task<__gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<1u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<1u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<1u> > > >, hpx::parallel::tr1::detail::util::int_array<1u>*, hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<1u> > >::comp’ [-Wreorder]
     Compare comp;
             ^~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:95:5: warning:   when initialized here [-Wreorder]
     stable_sort_task(RandomAccessIterator1 xs_, RandomAccessIterator1 xe_, RandomAccessIterator2 zs_, int inplace_, Compare comp_ ) :
     ^~~~~~~~~~~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::stable_sort_task(RandomAccessIterator1, RandomAccessIterator1, RandomAccessIterator2, int, Compare) [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<2u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<2u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<2u> > > >; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<2u>*; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<2u> >]’:
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:134:36:   required from ‘void pss::parallel_stable_sort(RandomAccessIterator, RandomAccessIterator, Compare) [with RandomAccessIterator = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<2u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<2u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<2u> > > >; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<2u> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:269:31:   required from ‘int Prueba(std::vector<Future>&, compare) [with IA = hpx::parallel::tr1::detail::util::int_array<2u>; compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<2u> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:183:11:   required from ‘void Generator(uint64_t) [with IA = hpx::parallel::tr1::detail::util::int_array<2u>; uint64_t = long unsigned int]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:116:43:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:93:17: warning: ‘pss::internal::stable_sort_task<__gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<2u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<2u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<2u> > > >, hpx::parallel::tr1::detail::util::int_array<2u>*, hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<2u> > >::inplace’ will be initialized after [-Wreorder]
     signed char inplace;
                 ^~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:92:13: warning:   ‘hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<2u> > pss::internal::stable_sort_task<__gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<2u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<2u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<2u> > > >, hpx::parallel::tr1::detail::util::int_array<2u>*, hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<2u> > >::comp’ [-Wreorder]
     Compare comp;
             ^~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:95:5: warning:   when initialized here [-Wreorder]
     stable_sort_task(RandomAccessIterator1 xs_, RandomAccessIterator1 xe_, RandomAccessIterator2 zs_, int inplace_, Compare comp_ ) :
     ^~~~~~~~~~~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::stable_sort_task(RandomAccessIterator1, RandomAccessIterator1, RandomAccessIterator2, int, Compare) [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<2u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<2u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<2u> > > >; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<2u>*; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<2u> >]’:
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:134:36:   required from ‘void pss::parallel_stable_sort(RandomAccessIterator, RandomAccessIterator, Compare) [with RandomAccessIterator = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<2u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<2u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<2u> > > >; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<2u> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:269:31:   required from ‘int Prueba(std::vector<Future>&, compare) [with IA = hpx::parallel::tr1::detail::util::int_array<2u>; compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<2u> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:186:11:   required from ‘void Generator(uint64_t) [with IA = hpx::parallel::tr1::detail::util::int_array<2u>; uint64_t = long unsigned int]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:116:43:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:93:17: warning: ‘pss::internal::stable_sort_task<__gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<2u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<2u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<2u> > > >, hpx::parallel::tr1::detail::util::int_array<2u>*, hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<2u> > >::inplace’ will be initialized after [-Wreorder]
     signed char inplace;
                 ^~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:92:13: warning:   ‘hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<2u> > pss::internal::stable_sort_task<__gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<2u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<2u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<2u> > > >, hpx::parallel::tr1::detail::util::int_array<2u>*, hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<2u> > >::comp’ [-Wreorder]
     Compare comp;
             ^~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:95:5: warning:   when initialized here [-Wreorder]
     stable_sort_task(RandomAccessIterator1 xs_, RandomAccessIterator1 xe_, RandomAccessIterator2 zs_, int inplace_, Compare comp_ ) :
     ^~~~~~~~~~~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::stable_sort_task(RandomAccessIterator1, RandomAccessIterator1, RandomAccessIterator2, int, Compare) [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<4u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<4u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<4u> > > >; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<4u>*; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<4u> >]’:
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:134:36:   required from ‘void pss::parallel_stable_sort(RandomAccessIterator, RandomAccessIterator, Compare) [with RandomAccessIterator = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<4u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<4u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<4u> > > >; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<4u> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:269:31:   required from ‘int Prueba(std::vector<Future>&, compare) [with IA = hpx::parallel::tr1::detail::util::int_array<4u>; compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<4u> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:183:11:   required from ‘void Generator(uint64_t) [with IA = hpx::parallel::tr1::detail::util::int_array<4u>; uint64_t = long unsigned int]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:117:43:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:93:17: warning: ‘pss::internal::stable_sort_task<__gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<4u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<4u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<4u> > > >, hpx::parallel::tr1::detail::util::int_array<4u>*, hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<4u> > >::inplace’ will be initialized after [-Wreorder]
     signed char inplace;
                 ^~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:92:13: warning:   ‘hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<4u> > pss::internal::stable_sort_task<__gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<4u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<4u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<4u> > > >, hpx::parallel::tr1::detail::util::int_array<4u>*, hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<4u> > >::comp’ [-Wreorder]
     Compare comp;
             ^~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:95:5: warning:   when initialized here [-Wreorder]
     stable_sort_task(RandomAccessIterator1 xs_, RandomAccessIterator1 xe_, RandomAccessIterator2 zs_, int inplace_, Compare comp_ ) :
     ^~~~~~~~~~~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::stable_sort_task(RandomAccessIterator1, RandomAccessIterator1, RandomAccessIterator2, int, Compare) [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<4u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<4u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<4u> > > >; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<4u>*; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<4u> >]’:
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:134:36:   required from ‘void pss::parallel_stable_sort(RandomAccessIterator, RandomAccessIterator, Compare) [with RandomAccessIterator = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<4u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<4u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<4u> > > >; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<4u> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:269:31:   required from ‘int Prueba(std::vector<Future>&, compare) [with IA = hpx::parallel::tr1::detail::util::int_array<4u>; compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<4u> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:186:11:   required from ‘void Generator(uint64_t) [with IA = hpx::parallel::tr1::detail::util::int_array<4u>; uint64_t = long unsigned int]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:117:43:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:93:17: warning: ‘pss::internal::stable_sort_task<__gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<4u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<4u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<4u> > > >, hpx::parallel::tr1::detail::util::int_array<4u>*, hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<4u> > >::inplace’ will be initialized after [-Wreorder]
     signed char inplace;
                 ^~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:92:13: warning:   ‘hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<4u> > pss::internal::stable_sort_task<__gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<4u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<4u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<4u> > > >, hpx::parallel::tr1::detail::util::int_array<4u>*, hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<4u> > >::comp’ [-Wreorder]
     Compare comp;
             ^~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:95:5: warning:   when initialized here [-Wreorder]
     stable_sort_task(RandomAccessIterator1 xs_, RandomAccessIterator1 xe_, RandomAccessIterator2 zs_, int inplace_, Compare comp_ ) :
     ^~~~~~~~~~~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::stable_sort_task(RandomAccessIterator1, RandomAccessIterator1, RandomAccessIterator2, int, Compare) [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<8u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<8u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<8u> > > >; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<8u>*; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<8u> >]’:
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:134:36:   required from ‘void pss::parallel_stable_sort(RandomAccessIterator, RandomAccessIterator, Compare) [with RandomAccessIterator = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<8u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<8u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<8u> > > >; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<8u> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:269:31:   required from ‘int Prueba(std::vector<Future>&, compare) [with IA = hpx::parallel::tr1::detail::util::int_array<8u>; compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<8u> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:183:11:   required from ‘void Generator(uint64_t) [with IA = hpx::parallel::tr1::detail::util::int_array<8u>; uint64_t = long unsigned int]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:118:43:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:93:17: warning: ‘pss::internal::stable_sort_task<__gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<8u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<8u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<8u> > > >, hpx::parallel::tr1::detail::util::int_array<8u>*, hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<8u> > >::inplace’ will be initialized after [-Wreorder]
     signed char inplace;
                 ^~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:92:13: warning:   ‘hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<8u> > pss::internal::stable_sort_task<__gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<8u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<8u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<8u> > > >, hpx::parallel::tr1::detail::util::int_array<8u>*, hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<8u> > >::comp’ [-Wreorder]
     Compare comp;
             ^~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:95:5: warning:   when initialized here [-Wreorder]
     stable_sort_task(RandomAccessIterator1 xs_, RandomAccessIterator1 xe_, RandomAccessIterator2 zs_, int inplace_, Compare comp_ ) :
     ^~~~~~~~~~~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::stable_sort_task(RandomAccessIterator1, RandomAccessIterator1, RandomAccessIterator2, int, Compare) [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<8u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<8u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<8u> > > >; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<8u>*; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<8u> >]’:
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:134:36:   required from ‘void pss::parallel_stable_sort(RandomAccessIterator, RandomAccessIterator, Compare) [with RandomAccessIterator = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<8u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<8u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<8u> > > >; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<8u> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:269:31:   required from ‘int Prueba(std::vector<Future>&, compare) [with IA = hpx::parallel::tr1::detail::util::int_array<8u>; compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<8u> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:186:11:   required from ‘void Generator(uint64_t) [with IA = hpx::parallel::tr1::detail::util::int_array<8u>; uint64_t = long unsigned int]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:118:43:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:93:17: warning: ‘pss::internal::stable_sort_task<__gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<8u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<8u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<8u> > > >, hpx::parallel::tr1::detail::util::int_array<8u>*, hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<8u> > >::inplace’ will be initialized after [-Wreorder]
     signed char inplace;
                 ^~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:92:13: warning:   ‘hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<8u> > pss::internal::stable_sort_task<__gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<8u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<8u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<8u> > > >, hpx::parallel::tr1::detail::util::int_array<8u>*, hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<8u> > >::comp’ [-Wreorder]
     Compare comp;
             ^~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:95:5: warning:   when initialized here [-Wreorder]
     stable_sort_task(RandomAccessIterator1 xs_, RandomAccessIterator1 xe_, RandomAccessIterator2 zs_, int inplace_, Compare comp_ ) :
     ^~~~~~~~~~~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::stable_sort_task(RandomAccessIterator1, RandomAccessIterator1, RandomAccessIterator2, int, Compare) [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<16u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<16u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<16u> > > >; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<16u>*; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<16u> >]’:
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:134:36:   required from ‘void pss::parallel_stable_sort(RandomAccessIterator, RandomAccessIterator, Compare) [with RandomAccessIterator = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<16u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<16u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<16u> > > >; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<16u> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:269:31:   required from ‘int Prueba(std::vector<Future>&, compare) [with IA = hpx::parallel::tr1::detail::util::int_array<16u>; compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<16u> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:183:11:   required from ‘void Generator(uint64_t) [with IA = hpx::parallel::tr1::detail::util::int_array<16u>; uint64_t = long unsigned int]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:119:43:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:93:17: warning: ‘pss::internal::stable_sort_task<__gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<16u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<16u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<16u> > > >, hpx::parallel::tr1::detail::util::int_array<16u>*, hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<16u> > >::inplace’ will be initialized after [-Wreorder]
     signed char inplace;
                 ^~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:92:13: warning:   ‘hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<16u> > pss::internal::stable_sort_task<__gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<16u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<16u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<16u> > > >, hpx::parallel::tr1::detail::util::int_array<16u>*, hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<16u> > >::comp’ [-Wreorder]
     Compare comp;
             ^~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:95:5: warning:   when initialized here [-Wreorder]
     stable_sort_task(RandomAccessIterator1 xs_, RandomAccessIterator1 xe_, RandomAccessIterator2 zs_, int inplace_, Compare comp_ ) :
     ^~~~~~~~~~~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::stable_sort_task(RandomAccessIterator1, RandomAccessIterator1, RandomAccessIterator2, int, Compare) [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<16u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<16u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<16u> > > >; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<16u>*; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<16u> >]’:
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:134:36:   required from ‘void pss::parallel_stable_sort(RandomAccessIterator, RandomAccessIterator, Compare) [with RandomAccessIterator = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<16u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<16u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<16u> > > >; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<16u> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:269:31:   required from ‘int Prueba(std::vector<Future>&, compare) [with IA = hpx::parallel::tr1::detail::util::int_array<16u>; compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<16u> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:186:11:   required from ‘void Generator(uint64_t) [with IA = hpx::parallel::tr1::detail::util::int_array<16u>; uint64_t = long unsigned int]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:119:43:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:93:17: warning: ‘pss::internal::stable_sort_task<__gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<16u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<16u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<16u> > > >, hpx::parallel::tr1::detail::util::int_array<16u>*, hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<16u> > >::inplace’ will be initialized after [-Wreorder]
     signed char inplace;
                 ^~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:92:13: warning:   ‘hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<16u> > pss::internal::stable_sort_task<__gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<16u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<16u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<16u> > > >, hpx::parallel::tr1::detail::util::int_array<16u>*, hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<16u> > >::comp’ [-Wreorder]
     Compare comp;
             ^~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:95:5: warning:   when initialized here [-Wreorder]
     stable_sort_task(RandomAccessIterator1 xs_, RandomAccessIterator1 xe_, RandomAccessIterator2 zs_, int inplace_, Compare comp_ ) :
     ^~~~~~~~~~~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::stable_sort_task(RandomAccessIterator1, RandomAccessIterator1, RandomAccessIterator2, int, Compare) [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<32u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<32u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<32u> > > >; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<32u>*; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<32u> >]’:
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:134:36:   required from ‘void pss::parallel_stable_sort(RandomAccessIterator, RandomAccessIterator, Compare) [with RandomAccessIterator = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<32u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<32u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<32u> > > >; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<32u> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:269:31:   required from ‘int Prueba(std::vector<Future>&, compare) [with IA = hpx::parallel::tr1::detail::util::int_array<32u>; compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<32u> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:183:11:   required from ‘void Generator(uint64_t) [with IA = hpx::parallel::tr1::detail::util::int_array<32u>; uint64_t = long unsigned int]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:120:43:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:93:17: warning: ‘pss::internal::stable_sort_task<__gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<32u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<32u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<32u> > > >, hpx::parallel::tr1::detail::util::int_array<32u>*, hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<32u> > >::inplace’ will be initialized after [-Wreorder]
     signed char inplace;
                 ^~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:92:13: warning:   ‘hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<32u> > pss::internal::stable_sort_task<__gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<32u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<32u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<32u> > > >, hpx::parallel::tr1::detail::util::int_array<32u>*, hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<32u> > >::comp’ [-Wreorder]
     Compare comp;
             ^~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:95:5: warning:   when initialized here [-Wreorder]
     stable_sort_task(RandomAccessIterator1 xs_, RandomAccessIterator1 xe_, RandomAccessIterator2 zs_, int inplace_, Compare comp_ ) :
     ^~~~~~~~~~~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::stable_sort_task(RandomAccessIterator1, RandomAccessIterator1, RandomAccessIterator2, int, Compare) [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<32u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<32u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<32u> > > >; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<32u>*; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<32u> >]’:
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:134:36:   required from ‘void pss::parallel_stable_sort(RandomAccessIterator, RandomAccessIterator, Compare) [with RandomAccessIterator = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<32u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<32u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<32u> > > >; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<32u> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:269:31:   required from ‘int Prueba(std::vector<Future>&, compare) [with IA = hpx::parallel::tr1::detail::util::int_array<32u>; compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<32u> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:186:11:   required from ‘void Generator(uint64_t) [with IA = hpx::parallel::tr1::detail::util::int_array<32u>; uint64_t = long unsigned int]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:120:43:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:93:17: warning: ‘pss::internal::stable_sort_task<__gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<32u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<32u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<32u> > > >, hpx::parallel::tr1::detail::util::int_array<32u>*, hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<32u> > >::inplace’ will be initialized after [-Wreorder]
     signed char inplace;
                 ^~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:92:13: warning:   ‘hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<32u> > pss::internal::stable_sort_task<__gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<32u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<32u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<32u> > > >, hpx::parallel::tr1::detail::util::int_array<32u>*, hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<32u> > >::comp’ [-Wreorder]
     Compare comp;
             ^~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:95:5: warning:   when initialized here [-Wreorder]
     stable_sort_task(RandomAccessIterator1 xs_, RandomAccessIterator1 xe_, RandomAccessIterator2 zs_, int inplace_, Compare comp_ ) :
     ^~~~~~~~~~~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::stable_sort_task(RandomAccessIterator1, RandomAccessIterator1, RandomAccessIterator2, int, Compare) [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<64u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<64u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<64u> > > >; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<64u>*; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<64u> >]’:
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:134:36:   required from ‘void pss::parallel_stable_sort(RandomAccessIterator, RandomAccessIterator, Compare) [with RandomAccessIterator = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<64u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<64u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<64u> > > >; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<64u> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:269:31:   required from ‘int Prueba(std::vector<Future>&, compare) [with IA = hpx::parallel::tr1::detail::util::int_array<64u>; compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<64u> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:183:11:   required from ‘void Generator(uint64_t) [with IA = hpx::parallel::tr1::detail::util::int_array<64u>; uint64_t = long unsigned int]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:121:43:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:93:17: warning: ‘pss::internal::stable_sort_task<__gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<64u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<64u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<64u> > > >, hpx::parallel::tr1::detail::util::int_array<64u>*, hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<64u> > >::inplace’ will be initialized after [-Wreorder]
     signed char inplace;
                 ^~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:92:13: warning:   ‘hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<64u> > pss::internal::stable_sort_task<__gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<64u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<64u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<64u> > > >, hpx::parallel::tr1::detail::util::int_array<64u>*, hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<64u> > >::comp’ [-Wreorder]
     Compare comp;
             ^~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:95:5: warning:   when initialized here [-Wreorder]
     stable_sort_task(RandomAccessIterator1 xs_, RandomAccessIterator1 xe_, RandomAccessIterator2 zs_, int inplace_, Compare comp_ ) :
     ^~~~~~~~~~~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::stable_sort_task(RandomAccessIterator1, RandomAccessIterator1, RandomAccessIterator2, int, Compare) [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<64u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<64u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<64u> > > >; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<64u>*; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<64u> >]’:
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:134:36:   required from ‘void pss::parallel_stable_sort(RandomAccessIterator, RandomAccessIterator, Compare) [with RandomAccessIterator = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<64u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<64u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<64u> > > >; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<64u> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:269:31:   required from ‘int Prueba(std::vector<Future>&, compare) [with IA = hpx::parallel::tr1::detail::util::int_array<64u>; compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<64u> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:186:11:   required from ‘void Generator(uint64_t) [with IA = hpx::parallel::tr1::detail::util::int_array<64u>; uint64_t = long unsigned int]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:121:43:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:93:17: warning: ‘pss::internal::stable_sort_task<__gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<64u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<64u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<64u> > > >, hpx::parallel::tr1::detail::util::int_array<64u>*, hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<64u> > >::inplace’ will be initialized after [-Wreorder]
     signed char inplace;
                 ^~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:92:13: warning:   ‘hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<64u> > pss::internal::stable_sort_task<__gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<64u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<64u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<64u> > > >, hpx::parallel::tr1::detail::util::int_array<64u>*, hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<64u> > >::comp’ [-Wreorder]
     Compare comp;
             ^~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:95:5: warning:   when initialized here [-Wreorder]
     stable_sort_task(RandomAccessIterator1 xs_, RandomAccessIterator1 xe_, RandomAccessIterator2 zs_, int inplace_, Compare comp_ ) :
     ^~~~~~~~~~~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘tbb::task* pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<64u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<64u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<64u> > > >; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<64u>*; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<64u> >]’:
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:103:17: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if (xe - xs <= SORT_CUT_OFF) {
         ~~~~~~~~^~~~~~~~~~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘tbb::task* pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<64u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<64u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<64u> > > >; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<64u>*; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<64u> >]’:
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:103:17: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘tbb::task* pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<32u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<32u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<32u> > > >; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<32u>*; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<32u> >]’:
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:103:17: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘tbb::task* pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<32u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<32u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<32u> > > >; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<32u>*; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<32u> >]’:
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:103:17: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘tbb::task* pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<16u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<16u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<16u> > > >; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<16u>*; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<16u> >]’:
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:103:17: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘tbb::task* pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<16u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<16u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<16u> > > >; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<16u>*; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<16u> >]’:
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:103:17: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘tbb::task* pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<8u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<8u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<8u> > > >; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<8u>*; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<8u> >]’:
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:103:17: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘tbb::task* pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<8u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<8u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<8u> > > >; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<8u>*; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<8u> >]’:
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:103:17: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘tbb::task* pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<4u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<4u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<4u> > > >; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<4u>*; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<4u> >]’:
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:103:17: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘tbb::task* pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<4u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<4u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<4u> > > >; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<4u>*; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<4u> >]’:
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:103:17: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘tbb::task* pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<2u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<2u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<2u> > > >; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<2u>*; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<2u> >]’:
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:103:17: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘tbb::task* pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<2u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<2u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<2u> > > >; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<2u>*; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<2u> >]’:
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:103:17: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘tbb::task* pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<1u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<1u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<1u> > > >; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<1u>*; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<1u> >]’:
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:103:17: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘tbb::task* pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<1u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<1u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<1u> > > >; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<1u>*; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<1u> >]’:
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:103:17: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘tbb::task* pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; RandomAccessIterator2 = std::__cxx11::basic_string<char>*; Compare = std::less<std::__cxx11::basic_string<char> >]’:
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:103:17: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘tbb::task* pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> >; RandomAccessIterator2 = long unsigned int*; Compare = std::less<long unsigned int>]’:
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:103:17: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
In file included from /home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:30:0:
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::merge_task(RandomAccessIterator1, RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator2, RandomAccessIterator3, bool, Compare) [with RandomAccessIterator1 = hpx::parallel::tr1::detail::util::int_array<64u>*; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<64u>*; RandomAccessIterator3 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<64u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<64u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<64u> > > >; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<64u> >]’:
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:112:17:   required from ‘tbb::task* pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<64u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<64u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<64u> > > >; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<64u>*; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<64u> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:49:10: warning: ‘pss::internal::merge_task<hpx::parallel::tr1::detail::util::int_array<64u>*, hpx::parallel::tr1::detail::util::int_array<64u>*, __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<64u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<64u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<64u> > > >, hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<64u> > >::destroy’ will be initialized after [-Wreorder]
     bool destroy;
          ^~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:48:13: warning:   ‘hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<64u> > pss::internal::merge_task<hpx::parallel::tr1::detail::util::int_array<64u>*, hpx::parallel::tr1::detail::util::int_array<64u>*, __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<64u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<64u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<64u> > > >, hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<64u> > >::comp’ [-Wreorder]
     Compare comp;
             ^~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:51:5: warning:   when initialized here [-Wreorder]
     merge_task( RandomAccessIterator1 xs_, RandomAccessIterator1 xe_, RandomAccessIterator2 ys_, RandomAccessIterator2 ye_, RandomAccessIterator3 zs_, bool destroy_, Compare comp_ ) :
     ^~~~~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::merge_task(RandomAccessIterator1, RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator2, RandomAccessIterator3, bool, Compare) [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<64u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<64u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<64u> > > >; RandomAccessIterator2 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<64u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<64u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<64u> > > >; RandomAccessIterator3 = hpx::parallel::tr1::detail::util::int_array<64u>*; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<64u> >]’:
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:114:17:   required from ‘tbb::task* pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<64u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<64u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<64u> > > >; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<64u>*; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<64u> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:49:10: warning: ‘pss::internal::merge_task<__gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<64u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<64u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<64u> > > >, __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<64u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<64u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<64u> > > >, hpx::parallel::tr1::detail::util::int_array<64u>*, hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<64u> > >::destroy’ will be initialized after [-Wreorder]
     bool destroy;
          ^~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:48:13: warning:   ‘hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<64u> > pss::internal::merge_task<__gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<64u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<64u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<64u> > > >, __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<64u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<64u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<64u> > > >, hpx::parallel::tr1::detail::util::int_array<64u>*, hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<64u> > >::comp’ [-Wreorder]
     Compare comp;
             ^~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:51:5: warning:   when initialized here [-Wreorder]
     merge_task( RandomAccessIterator1 xs_, RandomAccessIterator1 xe_, RandomAccessIterator2 ys_, RandomAccessIterator2 ye_, RandomAccessIterator3 zs_, bool destroy_, Compare comp_ ) :
     ^~~~~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::merge_task(RandomAccessIterator1, RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator2, RandomAccessIterator3, bool, Compare) [with RandomAccessIterator1 = hpx::parallel::tr1::detail::util::int_array<64u>*; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<64u>*; RandomAccessIterator3 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<64u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<64u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<64u> > > >; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<64u> >]’:
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:112:17:   required from ‘tbb::task* pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<64u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<64u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<64u> > > >; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<64u>*; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<64u> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:49:10: warning: ‘pss::internal::merge_task<hpx::parallel::tr1::detail::util::int_array<64u>*, hpx::parallel::tr1::detail::util::int_array<64u>*, __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<64u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<64u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<64u> > > >, hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<64u> > >::destroy’ will be initialized after [-Wreorder]
     bool destroy;
          ^~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:48:13: warning:   ‘hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<64u> > pss::internal::merge_task<hpx::parallel::tr1::detail::util::int_array<64u>*, hpx::parallel::tr1::detail::util::int_array<64u>*, __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<64u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<64u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<64u> > > >, hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<64u> > >::comp’ [-Wreorder]
     Compare comp;
             ^~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:51:5: warning:   when initialized here [-Wreorder]
     merge_task( RandomAccessIterator1 xs_, RandomAccessIterator1 xe_, RandomAccessIterator2 ys_, RandomAccessIterator2 ye_, RandomAccessIterator3 zs_, bool destroy_, Compare comp_ ) :
     ^~~~~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::merge_task(RandomAccessIterator1, RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator2, RandomAccessIterator3, bool, Compare) [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<64u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<64u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<64u> > > >; RandomAccessIterator2 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<64u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<64u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<64u> > > >; RandomAccessIterator3 = hpx::parallel::tr1::detail::util::int_array<64u>*; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<64u> >]’:
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:114:17:   required from ‘tbb::task* pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<64u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<64u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<64u> > > >; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<64u>*; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<64u> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:49:10: warning: ‘pss::internal::merge_task<__gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<64u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<64u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<64u> > > >, __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<64u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<64u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<64u> > > >, hpx::parallel::tr1::detail::util::int_array<64u>*, hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<64u> > >::destroy’ will be initialized after [-Wreorder]
     bool destroy;
          ^~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:48:13: warning:   ‘hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<64u> > pss::internal::merge_task<__gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<64u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<64u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<64u> > > >, __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<64u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<64u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<64u> > > >, hpx::parallel::tr1::detail::util::int_array<64u>*, hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<64u> > >::comp’ [-Wreorder]
     Compare comp;
             ^~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:51:5: warning:   when initialized here [-Wreorder]
     merge_task( RandomAccessIterator1 xs_, RandomAccessIterator1 xe_, RandomAccessIterator2 ys_, RandomAccessIterator2 ye_, RandomAccessIterator3 zs_, bool destroy_, Compare comp_ ) :
     ^~~~~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::merge_task(RandomAccessIterator1, RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator2, RandomAccessIterator3, bool, Compare) [with RandomAccessIterator1 = hpx::parallel::tr1::detail::util::int_array<32u>*; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<32u>*; RandomAccessIterator3 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<32u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<32u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<32u> > > >; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<32u> >]’:
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:112:17:   required from ‘tbb::task* pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<32u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<32u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<32u> > > >; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<32u>*; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<32u> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:49:10: warning: ‘pss::internal::merge_task<hpx::parallel::tr1::detail::util::int_array<32u>*, hpx::parallel::tr1::detail::util::int_array<32u>*, __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<32u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<32u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<32u> > > >, hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<32u> > >::destroy’ will be initialized after [-Wreorder]
     bool destroy;
          ^~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:48:13: warning:   ‘hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<32u> > pss::internal::merge_task<hpx::parallel::tr1::detail::util::int_array<32u>*, hpx::parallel::tr1::detail::util::int_array<32u>*, __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<32u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<32u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<32u> > > >, hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<32u> > >::comp’ [-Wreorder]
     Compare comp;
             ^~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:51:5: warning:   when initialized here [-Wreorder]
     merge_task( RandomAccessIterator1 xs_, RandomAccessIterator1 xe_, RandomAccessIterator2 ys_, RandomAccessIterator2 ye_, RandomAccessIterator3 zs_, bool destroy_, Compare comp_ ) :
     ^~~~~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::merge_task(RandomAccessIterator1, RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator2, RandomAccessIterator3, bool, Compare) [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<32u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<32u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<32u> > > >; RandomAccessIterator2 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<32u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<32u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<32u> > > >; RandomAccessIterator3 = hpx::parallel::tr1::detail::util::int_array<32u>*; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<32u> >]’:
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:114:17:   required from ‘tbb::task* pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<32u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<32u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<32u> > > >; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<32u>*; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<32u> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:49:10: warning: ‘pss::internal::merge_task<__gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<32u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<32u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<32u> > > >, __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<32u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<32u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<32u> > > >, hpx::parallel::tr1::detail::util::int_array<32u>*, hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<32u> > >::destroy’ will be initialized after [-Wreorder]
     bool destroy;
          ^~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:48:13: warning:   ‘hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<32u> > pss::internal::merge_task<__gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<32u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<32u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<32u> > > >, __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<32u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<32u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<32u> > > >, hpx::parallel::tr1::detail::util::int_array<32u>*, hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<32u> > >::comp’ [-Wreorder]
     Compare comp;
             ^~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:51:5: warning:   when initialized here [-Wreorder]
     merge_task( RandomAccessIterator1 xs_, RandomAccessIterator1 xe_, RandomAccessIterator2 ys_, RandomAccessIterator2 ye_, RandomAccessIterator3 zs_, bool destroy_, Compare comp_ ) :
     ^~~~~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::merge_task(RandomAccessIterator1, RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator2, RandomAccessIterator3, bool, Compare) [with RandomAccessIterator1 = hpx::parallel::tr1::detail::util::int_array<32u>*; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<32u>*; RandomAccessIterator3 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<32u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<32u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<32u> > > >; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<32u> >]’:
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:112:17:   required from ‘tbb::task* pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<32u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<32u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<32u> > > >; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<32u>*; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<32u> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:49:10: warning: ‘pss::internal::merge_task<hpx::parallel::tr1::detail::util::int_array<32u>*, hpx::parallel::tr1::detail::util::int_array<32u>*, __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<32u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<32u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<32u> > > >, hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<32u> > >::destroy’ will be initialized after [-Wreorder]
     bool destroy;
          ^~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:48:13: warning:   ‘hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<32u> > pss::internal::merge_task<hpx::parallel::tr1::detail::util::int_array<32u>*, hpx::parallel::tr1::detail::util::int_array<32u>*, __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<32u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<32u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<32u> > > >, hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<32u> > >::comp’ [-Wreorder]
     Compare comp;
             ^~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:51:5: warning:   when initialized here [-Wreorder]
     merge_task( RandomAccessIterator1 xs_, RandomAccessIterator1 xe_, RandomAccessIterator2 ys_, RandomAccessIterator2 ye_, RandomAccessIterator3 zs_, bool destroy_, Compare comp_ ) :
     ^~~~~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::merge_task(RandomAccessIterator1, RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator2, RandomAccessIterator3, bool, Compare) [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<32u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<32u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<32u> > > >; RandomAccessIterator2 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<32u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<32u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<32u> > > >; RandomAccessIterator3 = hpx::parallel::tr1::detail::util::int_array<32u>*; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<32u> >]’:
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:114:17:   required from ‘tbb::task* pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<32u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<32u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<32u> > > >; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<32u>*; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<32u> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:49:10: warning: ‘pss::internal::merge_task<__gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<32u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<32u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<32u> > > >, __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<32u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<32u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<32u> > > >, hpx::parallel::tr1::detail::util::int_array<32u>*, hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<32u> > >::destroy’ will be initialized after [-Wreorder]
     bool destroy;
          ^~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:48:13: warning:   ‘hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<32u> > pss::internal::merge_task<__gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<32u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<32u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<32u> > > >, __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<32u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<32u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<32u> > > >, hpx::parallel::tr1::detail::util::int_array<32u>*, hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<32u> > >::comp’ [-Wreorder]
     Compare comp;
             ^~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:51:5: warning:   when initialized here [-Wreorder]
     merge_task( RandomAccessIterator1 xs_, RandomAccessIterator1 xe_, RandomAccessIterator2 ys_, RandomAccessIterator2 ye_, RandomAccessIterator3 zs_, bool destroy_, Compare comp_ ) :
     ^~~~~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::merge_task(RandomAccessIterator1, RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator2, RandomAccessIterator3, bool, Compare) [with RandomAccessIterator1 = hpx::parallel::tr1::detail::util::int_array<16u>*; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<16u>*; RandomAccessIterator3 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<16u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<16u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<16u> > > >; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<16u> >]’:
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:112:17:   required from ‘tbb::task* pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<16u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<16u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<16u> > > >; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<16u>*; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<16u> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:49:10: warning: ‘pss::internal::merge_task<hpx::parallel::tr1::detail::util::int_array<16u>*, hpx::parallel::tr1::detail::util::int_array<16u>*, __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<16u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<16u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<16u> > > >, hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<16u> > >::destroy’ will be initialized after [-Wreorder]
     bool destroy;
          ^~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:48:13: warning:   ‘hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<16u> > pss::internal::merge_task<hpx::parallel::tr1::detail::util::int_array<16u>*, hpx::parallel::tr1::detail::util::int_array<16u>*, __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<16u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<16u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<16u> > > >, hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<16u> > >::comp’ [-Wreorder]
     Compare comp;
             ^~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:51:5: warning:   when initialized here [-Wreorder]
     merge_task( RandomAccessIterator1 xs_, RandomAccessIterator1 xe_, RandomAccessIterator2 ys_, RandomAccessIterator2 ye_, RandomAccessIterator3 zs_, bool destroy_, Compare comp_ ) :
     ^~~~~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::merge_task(RandomAccessIterator1, RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator2, RandomAccessIterator3, bool, Compare) [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<16u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<16u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<16u> > > >; RandomAccessIterator2 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<16u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<16u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<16u> > > >; RandomAccessIterator3 = hpx::parallel::tr1::detail::util::int_array<16u>*; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<16u> >]’:
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:114:17:   required from ‘tbb::task* pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<16u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<16u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<16u> > > >; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<16u>*; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<16u> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:49:10: warning: ‘pss::internal::merge_task<__gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<16u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<16u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<16u> > > >, __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<16u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<16u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<16u> > > >, hpx::parallel::tr1::detail::util::int_array<16u>*, hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<16u> > >::destroy’ will be initialized after [-Wreorder]
     bool destroy;
          ^~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:48:13: warning:   ‘hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<16u> > pss::internal::merge_task<__gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<16u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<16u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<16u> > > >, __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<16u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<16u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<16u> > > >, hpx::parallel::tr1::detail::util::int_array<16u>*, hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<16u> > >::comp’ [-Wreorder]
     Compare comp;
             ^~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:51:5: warning:   when initialized here [-Wreorder]
     merge_task( RandomAccessIterator1 xs_, RandomAccessIterator1 xe_, RandomAccessIterator2 ys_, RandomAccessIterator2 ye_, RandomAccessIterator3 zs_, bool destroy_, Compare comp_ ) :
     ^~~~~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::merge_task(RandomAccessIterator1, RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator2, RandomAccessIterator3, bool, Compare) [with RandomAccessIterator1 = hpx::parallel::tr1::detail::util::int_array<16u>*; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<16u>*; RandomAccessIterator3 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<16u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<16u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<16u> > > >; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<16u> >]’:
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:112:17:   required from ‘tbb::task* pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<16u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<16u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<16u> > > >; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<16u>*; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<16u> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:49:10: warning: ‘pss::internal::merge_task<hpx::parallel::tr1::detail::util::int_array<16u>*, hpx::parallel::tr1::detail::util::int_array<16u>*, __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<16u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<16u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<16u> > > >, hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<16u> > >::destroy’ will be initialized after [-Wreorder]
     bool destroy;
          ^~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:48:13: warning:   ‘hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<16u> > pss::internal::merge_task<hpx::parallel::tr1::detail::util::int_array<16u>*, hpx::parallel::tr1::detail::util::int_array<16u>*, __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<16u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<16u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<16u> > > >, hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<16u> > >::comp’ [-Wreorder]
     Compare comp;
             ^~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:51:5: warning:   when initialized here [-Wreorder]
     merge_task( RandomAccessIterator1 xs_, RandomAccessIterator1 xe_, RandomAccessIterator2 ys_, RandomAccessIterator2 ye_, RandomAccessIterator3 zs_, bool destroy_, Compare comp_ ) :
     ^~~~~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::merge_task(RandomAccessIterator1, RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator2, RandomAccessIterator3, bool, Compare) [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<16u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<16u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<16u> > > >; RandomAccessIterator2 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<16u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<16u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<16u> > > >; RandomAccessIterator3 = hpx::parallel::tr1::detail::util::int_array<16u>*; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<16u> >]’:
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:114:17:   required from ‘tbb::task* pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<16u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<16u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<16u> > > >; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<16u>*; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<16u> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:49:10: warning: ‘pss::internal::merge_task<__gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<16u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<16u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<16u> > > >, __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<16u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<16u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<16u> > > >, hpx::parallel::tr1::detail::util::int_array<16u>*, hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<16u> > >::destroy’ will be initialized after [-Wreorder]
     bool destroy;
          ^~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:48:13: warning:   ‘hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<16u> > pss::internal::merge_task<__gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<16u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<16u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<16u> > > >, __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<16u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<16u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<16u> > > >, hpx::parallel::tr1::detail::util::int_array<16u>*, hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<16u> > >::comp’ [-Wreorder]
     Compare comp;
             ^~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:51:5: warning:   when initialized here [-Wreorder]
     merge_task( RandomAccessIterator1 xs_, RandomAccessIterator1 xe_, RandomAccessIterator2 ys_, RandomAccessIterator2 ye_, RandomAccessIterator3 zs_, bool destroy_, Compare comp_ ) :
     ^~~~~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::merge_task(RandomAccessIterator1, RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator2, RandomAccessIterator3, bool, Compare) [with RandomAccessIterator1 = hpx::parallel::tr1::detail::util::int_array<8u>*; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<8u>*; RandomAccessIterator3 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<8u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<8u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<8u> > > >; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<8u> >]’:
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:112:17:   required from ‘tbb::task* pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<8u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<8u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<8u> > > >; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<8u>*; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<8u> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:49:10: warning: ‘pss::internal::merge_task<hpx::parallel::tr1::detail::util::int_array<8u>*, hpx::parallel::tr1::detail::util::int_array<8u>*, __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<8u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<8u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<8u> > > >, hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<8u> > >::destroy’ will be initialized after [-Wreorder]
     bool destroy;
          ^~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:48:13: warning:   ‘hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<8u> > pss::internal::merge_task<hpx::parallel::tr1::detail::util::int_array<8u>*, hpx::parallel::tr1::detail::util::int_array<8u>*, __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<8u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<8u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<8u> > > >, hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<8u> > >::comp’ [-Wreorder]
     Compare comp;
             ^~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:51:5: warning:   when initialized here [-Wreorder]
     merge_task( RandomAccessIterator1 xs_, RandomAccessIterator1 xe_, RandomAccessIterator2 ys_, RandomAccessIterator2 ye_, RandomAccessIterator3 zs_, bool destroy_, Compare comp_ ) :
     ^~~~~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::merge_task(RandomAccessIterator1, RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator2, RandomAccessIterator3, bool, Compare) [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<8u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<8u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<8u> > > >; RandomAccessIterator2 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<8u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<8u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<8u> > > >; RandomAccessIterator3 = hpx::parallel::tr1::detail::util::int_array<8u>*; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<8u> >]’:
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:114:17:   required from ‘tbb::task* pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<8u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<8u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<8u> > > >; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<8u>*; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<8u> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:49:10: warning: ‘pss::internal::merge_task<__gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<8u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<8u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<8u> > > >, __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<8u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<8u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<8u> > > >, hpx::parallel::tr1::detail::util::int_array<8u>*, hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<8u> > >::destroy’ will be initialized after [-Wreorder]
     bool destroy;
          ^~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:48:13: warning:   ‘hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<8u> > pss::internal::merge_task<__gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<8u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<8u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<8u> > > >, __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<8u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<8u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<8u> > > >, hpx::parallel::tr1::detail::util::int_array<8u>*, hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<8u> > >::comp’ [-Wreorder]
     Compare comp;
             ^~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:51:5: warning:   when initialized here [-Wreorder]
     merge_task( RandomAccessIterator1 xs_, RandomAccessIterator1 xe_, RandomAccessIterator2 ys_, RandomAccessIterator2 ye_, RandomAccessIterator3 zs_, bool destroy_, Compare comp_ ) :
     ^~~~~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::merge_task(RandomAccessIterator1, RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator2, RandomAccessIterator3, bool, Compare) [with RandomAccessIterator1 = hpx::parallel::tr1::detail::util::int_array<8u>*; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<8u>*; RandomAccessIterator3 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<8u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<8u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<8u> > > >; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<8u> >]’:
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:112:17:   required from ‘tbb::task* pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<8u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<8u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<8u> > > >; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<8u>*; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<8u> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:49:10: warning: ‘pss::internal::merge_task<hpx::parallel::tr1::detail::util::int_array<8u>*, hpx::parallel::tr1::detail::util::int_array<8u>*, __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<8u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<8u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<8u> > > >, hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<8u> > >::destroy’ will be initialized after [-Wreorder]
     bool destroy;
          ^~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:48:13: warning:   ‘hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<8u> > pss::internal::merge_task<hpx::parallel::tr1::detail::util::int_array<8u>*, hpx::parallel::tr1::detail::util::int_array<8u>*, __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<8u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<8u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<8u> > > >, hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<8u> > >::comp’ [-Wreorder]
     Compare comp;
             ^~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:51:5: warning:   when initialized here [-Wreorder]
     merge_task( RandomAccessIterator1 xs_, RandomAccessIterator1 xe_, RandomAccessIterator2 ys_, RandomAccessIterator2 ye_, RandomAccessIterator3 zs_, bool destroy_, Compare comp_ ) :
     ^~~~~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::merge_task(RandomAccessIterator1, RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator2, RandomAccessIterator3, bool, Compare) [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<8u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<8u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<8u> > > >; RandomAccessIterator2 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<8u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<8u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<8u> > > >; RandomAccessIterator3 = hpx::parallel::tr1::detail::util::int_array<8u>*; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<8u> >]’:
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:114:17:   required from ‘tbb::task* pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<8u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<8u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<8u> > > >; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<8u>*; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<8u> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:49:10: warning: ‘pss::internal::merge_task<__gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<8u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<8u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<8u> > > >, __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<8u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<8u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<8u> > > >, hpx::parallel::tr1::detail::util::int_array<8u>*, hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<8u> > >::destroy’ will be initialized after [-Wreorder]
     bool destroy;
          ^~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:48:13: warning:   ‘hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<8u> > pss::internal::merge_task<__gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<8u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<8u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<8u> > > >, __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<8u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<8u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<8u> > > >, hpx::parallel::tr1::detail::util::int_array<8u>*, hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<8u> > >::comp’ [-Wreorder]
     Compare comp;
             ^~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:51:5: warning:   when initialized here [-Wreorder]
     merge_task( RandomAccessIterator1 xs_, RandomAccessIterator1 xe_, RandomAccessIterator2 ys_, RandomAccessIterator2 ye_, RandomAccessIterator3 zs_, bool destroy_, Compare comp_ ) :
     ^~~~~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::merge_task(RandomAccessIterator1, RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator2, RandomAccessIterator3, bool, Compare) [with RandomAccessIterator1 = hpx::parallel::tr1::detail::util::int_array<4u>*; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<4u>*; RandomAccessIterator3 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<4u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<4u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<4u> > > >; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<4u> >]’:
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:112:17:   required from ‘tbb::task* pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<4u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<4u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<4u> > > >; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<4u>*; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<4u> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:49:10: warning: ‘pss::internal::merge_task<hpx::parallel::tr1::detail::util::int_array<4u>*, hpx::parallel::tr1::detail::util::int_array<4u>*, __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<4u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<4u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<4u> > > >, hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<4u> > >::destroy’ will be initialized after [-Wreorder]
     bool destroy;
          ^~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:48:13: warning:   ‘hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<4u> > pss::internal::merge_task<hpx::parallel::tr1::detail::util::int_array<4u>*, hpx::parallel::tr1::detail::util::int_array<4u>*, __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<4u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<4u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<4u> > > >, hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<4u> > >::comp’ [-Wreorder]
     Compare comp;
             ^~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:51:5: warning:   when initialized here [-Wreorder]
     merge_task( RandomAccessIterator1 xs_, RandomAccessIterator1 xe_, RandomAccessIterator2 ys_, RandomAccessIterator2 ye_, RandomAccessIterator3 zs_, bool destroy_, Compare comp_ ) :
     ^~~~~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::merge_task(RandomAccessIterator1, RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator2, RandomAccessIterator3, bool, Compare) [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<4u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<4u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<4u> > > >; RandomAccessIterator2 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<4u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<4u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<4u> > > >; RandomAccessIterator3 = hpx::parallel::tr1::detail::util::int_array<4u>*; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<4u> >]’:
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:114:17:   required from ‘tbb::task* pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<4u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<4u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<4u> > > >; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<4u>*; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<4u> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:49:10: warning: ‘pss::internal::merge_task<__gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<4u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<4u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<4u> > > >, __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<4u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<4u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<4u> > > >, hpx::parallel::tr1::detail::util::int_array<4u>*, hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<4u> > >::destroy’ will be initialized after [-Wreorder]
     bool destroy;
          ^~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:48:13: warning:   ‘hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<4u> > pss::internal::merge_task<__gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<4u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<4u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<4u> > > >, __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<4u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<4u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<4u> > > >, hpx::parallel::tr1::detail::util::int_array<4u>*, hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<4u> > >::comp’ [-Wreorder]
     Compare comp;
             ^~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:51:5: warning:   when initialized here [-Wreorder]
     merge_task( RandomAccessIterator1 xs_, RandomAccessIterator1 xe_, RandomAccessIterator2 ys_, RandomAccessIterator2 ye_, RandomAccessIterator3 zs_, bool destroy_, Compare comp_ ) :
     ^~~~~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::merge_task(RandomAccessIterator1, RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator2, RandomAccessIterator3, bool, Compare) [with RandomAccessIterator1 = hpx::parallel::tr1::detail::util::int_array<4u>*; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<4u>*; RandomAccessIterator3 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<4u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<4u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<4u> > > >; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<4u> >]’:
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:112:17:   required from ‘tbb::task* pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<4u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<4u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<4u> > > >; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<4u>*; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<4u> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:49:10: warning: ‘pss::internal::merge_task<hpx::parallel::tr1::detail::util::int_array<4u>*, hpx::parallel::tr1::detail::util::int_array<4u>*, __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<4u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<4u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<4u> > > >, hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<4u> > >::destroy’ will be initialized after [-Wreorder]
     bool destroy;
          ^~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:48:13: warning:   ‘hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<4u> > pss::internal::merge_task<hpx::parallel::tr1::detail::util::int_array<4u>*, hpx::parallel::tr1::detail::util::int_array<4u>*, __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<4u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<4u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<4u> > > >, hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<4u> > >::comp’ [-Wreorder]
     Compare comp;
             ^~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:51:5: warning:   when initialized here [-Wreorder]
     merge_task( RandomAccessIterator1 xs_, RandomAccessIterator1 xe_, RandomAccessIterator2 ys_, RandomAccessIterator2 ye_, RandomAccessIterator3 zs_, bool destroy_, Compare comp_ ) :
     ^~~~~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::merge_task(RandomAccessIterator1, RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator2, RandomAccessIterator3, bool, Compare) [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<4u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<4u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<4u> > > >; RandomAccessIterator2 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<4u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<4u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<4u> > > >; RandomAccessIterator3 = hpx::parallel::tr1::detail::util::int_array<4u>*; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<4u> >]’:
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:114:17:   required from ‘tbb::task* pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<4u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<4u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<4u> > > >; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<4u>*; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<4u> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:49:10: warning: ‘pss::internal::merge_task<__gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<4u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<4u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<4u> > > >, __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<4u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<4u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<4u> > > >, hpx::parallel::tr1::detail::util::int_array<4u>*, hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<4u> > >::destroy’ will be initialized after [-Wreorder]
     bool destroy;
          ^~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:48:13: warning:   ‘hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<4u> > pss::internal::merge_task<__gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<4u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<4u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<4u> > > >, __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<4u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<4u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<4u> > > >, hpx::parallel::tr1::detail::util::int_array<4u>*, hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<4u> > >::comp’ [-Wreorder]
     Compare comp;
             ^~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:51:5: warning:   when initialized here [-Wreorder]
     merge_task( RandomAccessIterator1 xs_, RandomAccessIterator1 xe_, RandomAccessIterator2 ys_, RandomAccessIterator2 ye_, RandomAccessIterator3 zs_, bool destroy_, Compare comp_ ) :
     ^~~~~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::merge_task(RandomAccessIterator1, RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator2, RandomAccessIterator3, bool, Compare) [with RandomAccessIterator1 = hpx::parallel::tr1::detail::util::int_array<2u>*; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<2u>*; RandomAccessIterator3 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<2u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<2u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<2u> > > >; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<2u> >]’:
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:112:17:   required from ‘tbb::task* pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<2u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<2u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<2u> > > >; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<2u>*; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<2u> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:49:10: warning: ‘pss::internal::merge_task<hpx::parallel::tr1::detail::util::int_array<2u>*, hpx::parallel::tr1::detail::util::int_array<2u>*, __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<2u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<2u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<2u> > > >, hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<2u> > >::destroy’ will be initialized after [-Wreorder]
     bool destroy;
          ^~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:48:13: warning:   ‘hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<2u> > pss::internal::merge_task<hpx::parallel::tr1::detail::util::int_array<2u>*, hpx::parallel::tr1::detail::util::int_array<2u>*, __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<2u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<2u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<2u> > > >, hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<2u> > >::comp’ [-Wreorder]
     Compare comp;
             ^~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:51:5: warning:   when initialized here [-Wreorder]
     merge_task( RandomAccessIterator1 xs_, RandomAccessIterator1 xe_, RandomAccessIterator2 ys_, RandomAccessIterator2 ye_, RandomAccessIterator3 zs_, bool destroy_, Compare comp_ ) :
     ^~~~~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::merge_task(RandomAccessIterator1, RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator2, RandomAccessIterator3, bool, Compare) [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<2u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<2u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<2u> > > >; RandomAccessIterator2 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<2u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<2u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<2u> > > >; RandomAccessIterator3 = hpx::parallel::tr1::detail::util::int_array<2u>*; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<2u> >]’:
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:114:17:   required from ‘tbb::task* pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<2u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<2u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<2u> > > >; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<2u>*; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<2u> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:49:10: warning: ‘pss::internal::merge_task<__gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<2u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<2u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<2u> > > >, __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<2u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<2u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<2u> > > >, hpx::parallel::tr1::detail::util::int_array<2u>*, hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<2u> > >::destroy’ will be initialized after [-Wreorder]
     bool destroy;
          ^~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:48:13: warning:   ‘hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<2u> > pss::internal::merge_task<__gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<2u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<2u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<2u> > > >, __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<2u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<2u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<2u> > > >, hpx::parallel::tr1::detail::util::int_array<2u>*, hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<2u> > >::comp’ [-Wreorder]
     Compare comp;
             ^~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:51:5: warning:   when initialized here [-Wreorder]
     merge_task( RandomAccessIterator1 xs_, RandomAccessIterator1 xe_, RandomAccessIterator2 ys_, RandomAccessIterator2 ye_, RandomAccessIterator3 zs_, bool destroy_, Compare comp_ ) :
     ^~~~~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::merge_task(RandomAccessIterator1, RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator2, RandomAccessIterator3, bool, Compare) [with RandomAccessIterator1 = hpx::parallel::tr1::detail::util::int_array<2u>*; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<2u>*; RandomAccessIterator3 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<2u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<2u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<2u> > > >; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<2u> >]’:
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:112:17:   required from ‘tbb::task* pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<2u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<2u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<2u> > > >; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<2u>*; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<2u> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:49:10: warning: ‘pss::internal::merge_task<hpx::parallel::tr1::detail::util::int_array<2u>*, hpx::parallel::tr1::detail::util::int_array<2u>*, __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<2u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<2u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<2u> > > >, hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<2u> > >::destroy’ will be initialized after [-Wreorder]
     bool destroy;
          ^~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:48:13: warning:   ‘hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<2u> > pss::internal::merge_task<hpx::parallel::tr1::detail::util::int_array<2u>*, hpx::parallel::tr1::detail::util::int_array<2u>*, __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<2u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<2u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<2u> > > >, hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<2u> > >::comp’ [-Wreorder]
     Compare comp;
             ^~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:51:5: warning:   when initialized here [-Wreorder]
     merge_task( RandomAccessIterator1 xs_, RandomAccessIterator1 xe_, RandomAccessIterator2 ys_, RandomAccessIterator2 ye_, RandomAccessIterator3 zs_, bool destroy_, Compare comp_ ) :
     ^~~~~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::merge_task(RandomAccessIterator1, RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator2, RandomAccessIterator3, bool, Compare) [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<2u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<2u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<2u> > > >; RandomAccessIterator2 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<2u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<2u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<2u> > > >; RandomAccessIterator3 = hpx::parallel::tr1::detail::util::int_array<2u>*; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<2u> >]’:
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:114:17:   required from ‘tbb::task* pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<2u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<2u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<2u> > > >; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<2u>*; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<2u> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:49:10: warning: ‘pss::internal::merge_task<__gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<2u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<2u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<2u> > > >, __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<2u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<2u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<2u> > > >, hpx::parallel::tr1::detail::util::int_array<2u>*, hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<2u> > >::destroy’ will be initialized after [-Wreorder]
     bool destroy;
          ^~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:48:13: warning:   ‘hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<2u> > pss::internal::merge_task<__gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<2u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<2u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<2u> > > >, __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<2u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<2u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<2u> > > >, hpx::parallel::tr1::detail::util::int_array<2u>*, hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<2u> > >::comp’ [-Wreorder]
     Compare comp;
             ^~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:51:5: warning:   when initialized here [-Wreorder]
     merge_task( RandomAccessIterator1 xs_, RandomAccessIterator1 xe_, RandomAccessIterator2 ys_, RandomAccessIterator2 ye_, RandomAccessIterator3 zs_, bool destroy_, Compare comp_ ) :
     ^~~~~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::merge_task(RandomAccessIterator1, RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator2, RandomAccessIterator3, bool, Compare) [with RandomAccessIterator1 = hpx::parallel::tr1::detail::util::int_array<1u>*; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<1u>*; RandomAccessIterator3 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<1u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<1u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<1u> > > >; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<1u> >]’:
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:112:17:   required from ‘tbb::task* pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<1u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<1u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<1u> > > >; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<1u>*; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<1u> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:49:10: warning: ‘pss::internal::merge_task<hpx::parallel::tr1::detail::util::int_array<1u>*, hpx::parallel::tr1::detail::util::int_array<1u>*, __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<1u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<1u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<1u> > > >, hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<1u> > >::destroy’ will be initialized after [-Wreorder]
     bool destroy;
          ^~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:48:13: warning:   ‘hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<1u> > pss::internal::merge_task<hpx::parallel::tr1::detail::util::int_array<1u>*, hpx::parallel::tr1::detail::util::int_array<1u>*, __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<1u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<1u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<1u> > > >, hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<1u> > >::comp’ [-Wreorder]
     Compare comp;
             ^~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:51:5: warning:   when initialized here [-Wreorder]
     merge_task( RandomAccessIterator1 xs_, RandomAccessIterator1 xe_, RandomAccessIterator2 ys_, RandomAccessIterator2 ye_, RandomAccessIterator3 zs_, bool destroy_, Compare comp_ ) :
     ^~~~~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::merge_task(RandomAccessIterator1, RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator2, RandomAccessIterator3, bool, Compare) [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<1u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<1u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<1u> > > >; RandomAccessIterator2 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<1u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<1u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<1u> > > >; RandomAccessIterator3 = hpx::parallel::tr1::detail::util::int_array<1u>*; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<1u> >]’:
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:114:17:   required from ‘tbb::task* pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<1u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<1u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<1u> > > >; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<1u>*; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<1u> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:49:10: warning: ‘pss::internal::merge_task<__gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<1u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<1u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<1u> > > >, __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<1u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<1u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<1u> > > >, hpx::parallel::tr1::detail::util::int_array<1u>*, hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<1u> > >::destroy’ will be initialized after [-Wreorder]
     bool destroy;
          ^~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:48:13: warning:   ‘hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<1u> > pss::internal::merge_task<__gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<1u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<1u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<1u> > > >, __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<1u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<1u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<1u> > > >, hpx::parallel::tr1::detail::util::int_array<1u>*, hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<1u> > >::comp’ [-Wreorder]
     Compare comp;
             ^~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:51:5: warning:   when initialized here [-Wreorder]
     merge_task( RandomAccessIterator1 xs_, RandomAccessIterator1 xe_, RandomAccessIterator2 ys_, RandomAccessIterator2 ye_, RandomAccessIterator3 zs_, bool destroy_, Compare comp_ ) :
     ^~~~~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::merge_task(RandomAccessIterator1, RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator2, RandomAccessIterator3, bool, Compare) [with RandomAccessIterator1 = hpx::parallel::tr1::detail::util::int_array<1u>*; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<1u>*; RandomAccessIterator3 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<1u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<1u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<1u> > > >; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<1u> >]’:
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:112:17:   required from ‘tbb::task* pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<1u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<1u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<1u> > > >; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<1u>*; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<1u> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:49:10: warning: ‘pss::internal::merge_task<hpx::parallel::tr1::detail::util::int_array<1u>*, hpx::parallel::tr1::detail::util::int_array<1u>*, __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<1u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<1u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<1u> > > >, hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<1u> > >::destroy’ will be initialized after [-Wreorder]
     bool destroy;
          ^~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:48:13: warning:   ‘hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<1u> > pss::internal::merge_task<hpx::parallel::tr1::detail::util::int_array<1u>*, hpx::parallel::tr1::detail::util::int_array<1u>*, __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<1u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<1u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<1u> > > >, hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<1u> > >::comp’ [-Wreorder]
     Compare comp;
             ^~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:51:5: warning:   when initialized here [-Wreorder]
     merge_task( RandomAccessIterator1 xs_, RandomAccessIterator1 xe_, RandomAccessIterator2 ys_, RandomAccessIterator2 ye_, RandomAccessIterator3 zs_, bool destroy_, Compare comp_ ) :
     ^~~~~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::merge_task(RandomAccessIterator1, RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator2, RandomAccessIterator3, bool, Compare) [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<1u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<1u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<1u> > > >; RandomAccessIterator2 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<1u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<1u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<1u> > > >; RandomAccessIterator3 = hpx::parallel::tr1::detail::util::int_array<1u>*; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<1u> >]’:
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:114:17:   required from ‘tbb::task* pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<1u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<1u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<1u> > > >; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<1u>*; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<1u> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:49:10: warning: ‘pss::internal::merge_task<__gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<1u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<1u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<1u> > > >, __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<1u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<1u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<1u> > > >, hpx::parallel::tr1::detail::util::int_array<1u>*, hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<1u> > >::destroy’ will be initialized after [-Wreorder]
     bool destroy;
          ^~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:48:13: warning:   ‘hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<1u> > pss::internal::merge_task<__gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<1u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<1u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<1u> > > >, __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<1u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<1u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<1u> > > >, hpx::parallel::tr1::detail::util::int_array<1u>*, hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<1u> > >::comp’ [-Wreorder]
     Compare comp;
             ^~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:51:5: warning:   when initialized here [-Wreorder]
     merge_task( RandomAccessIterator1 xs_, RandomAccessIterator1 xe_, RandomAccessIterator2 ys_, RandomAccessIterator2 ye_, RandomAccessIterator3 zs_, bool destroy_, Compare comp_ ) :
     ^~~~~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::merge_task(RandomAccessIterator1, RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator2, RandomAccessIterator3, bool, Compare) [with RandomAccessIterator1 = std::__cxx11::basic_string<char>*; RandomAccessIterator2 = std::__cxx11::basic_string<char>*; RandomAccessIterator3 = __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; Compare = std::less<std::__cxx11::basic_string<char> >]’:
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:112:17:   required from ‘tbb::task* pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; RandomAccessIterator2 = std::__cxx11::basic_string<char>*; Compare = std::less<std::__cxx11::basic_string<char> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:49:10: warning: ‘pss::internal::merge_task<std::__cxx11::basic_string<char>*, std::__cxx11::basic_string<char>*, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >, std::less<std::__cxx11::basic_string<char> > >::destroy’ will be initialized after [-Wreorder]
     bool destroy;
          ^~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:48:13: warning:   ‘std::less<std::__cxx11::basic_string<char> > pss::internal::merge_task<std::__cxx11::basic_string<char>*, std::__cxx11::basic_string<char>*, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >, std::less<std::__cxx11::basic_string<char> > >::comp’ [-Wreorder]
     Compare comp;
             ^~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:51:5: warning:   when initialized here [-Wreorder]
     merge_task( RandomAccessIterator1 xs_, RandomAccessIterator1 xe_, RandomAccessIterator2 ys_, RandomAccessIterator2 ye_, RandomAccessIterator3 zs_, bool destroy_, Compare comp_ ) :
     ^~~~~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::merge_task(RandomAccessIterator1, RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator2, RandomAccessIterator3, bool, Compare) [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; RandomAccessIterator2 = __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; RandomAccessIterator3 = std::__cxx11::basic_string<char>*; Compare = std::less<std::__cxx11::basic_string<char> >]’:
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:114:17:   required from ‘tbb::task* pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; RandomAccessIterator2 = std::__cxx11::basic_string<char>*; Compare = std::less<std::__cxx11::basic_string<char> >]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:49:10: warning: ‘pss::internal::merge_task<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >, std::__cxx11::basic_string<char>*, std::less<std::__cxx11::basic_string<char> > >::destroy’ will be initialized after [-Wreorder]
     bool destroy;
          ^~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:48:13: warning:   ‘std::less<std::__cxx11::basic_string<char> > pss::internal::merge_task<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >, std::__cxx11::basic_string<char>*, std::less<std::__cxx11::basic_string<char> > >::comp’ [-Wreorder]
     Compare comp;
             ^~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:51:5: warning:   when initialized here [-Wreorder]
     merge_task( RandomAccessIterator1 xs_, RandomAccessIterator1 xe_, RandomAccessIterator2 ys_, RandomAccessIterator2 ye_, RandomAccessIterator3 zs_, bool destroy_, Compare comp_ ) :
     ^~~~~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::merge_task(RandomAccessIterator1, RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator2, RandomAccessIterator3, bool, Compare) [with RandomAccessIterator1 = long unsigned int*; RandomAccessIterator2 = long unsigned int*; RandomAccessIterator3 = __gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> >; Compare = std::less<long unsigned int>]’:
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:112:17:   required from ‘tbb::task* pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> >; RandomAccessIterator2 = long unsigned int*; Compare = std::less<long unsigned int>]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:49:10: warning: ‘pss::internal::merge_task<long unsigned int*, long unsigned int*, __gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> >, std::less<long unsigned int> >::destroy’ will be initialized after [-Wreorder]
     bool destroy;
          ^~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:48:13: warning:   ‘std::less<long unsigned int> pss::internal::merge_task<long unsigned int*, long unsigned int*, __gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> >, std::less<long unsigned int> >::comp’ [-Wreorder]
     Compare comp;
             ^~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:51:5: warning:   when initialized here [-Wreorder]
     merge_task( RandomAccessIterator1 xs_, RandomAccessIterator1 xe_, RandomAccessIterator2 ys_, RandomAccessIterator2 ye_, RandomAccessIterator3 zs_, bool destroy_, Compare comp_ ) :
     ^~~~~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::merge_task(RandomAccessIterator1, RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator2, RandomAccessIterator3, bool, Compare) [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> >; RandomAccessIterator2 = __gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> >; RandomAccessIterator3 = long unsigned int*; Compare = std::less<long unsigned int>]’:
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:114:17:   required from ‘tbb::task* pss::internal::stable_sort_task<RandomAccessIterator1, RandomAccessIterator2, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> >; RandomAccessIterator2 = long unsigned int*; Compare = std::less<long unsigned int>]’
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:49:10: warning: ‘pss::internal::merge_task<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> >, __gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> >, long unsigned int*, std::less<long unsigned int> >::destroy’ will be initialized after [-Wreorder]
     bool destroy;
          ^~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:48:13: warning:   ‘std::less<long unsigned int> pss::internal::merge_task<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> >, __gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> >, long unsigned int*, std::less<long unsigned int> >::comp’ [-Wreorder]
     Compare comp;
             ^~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:51:5: warning:   when initialized here [-Wreorder]
     merge_task( RandomAccessIterator1 xs_, RandomAccessIterator1 xe_, RandomAccessIterator2 ys_, RandomAccessIterator2 ye_, RandomAccessIterator3 zs_, bool destroy_, Compare comp_ ) :
     ^~~~~~~~~~
In file included from /home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:30:0:
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘tbb::task* pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> >; RandomAccessIterator2 = __gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> >; RandomAccessIterator3 = long unsigned int*; Compare = std::less<long unsigned int>]’:
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:60:11: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if( n <= MERGE_CUT_OFF ) {
         ~~^~~~~~~~~~~~~~~~
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘tbb::task* pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::execute() [with RandomAccessIterator1 = long unsigned int*; RandomAccessIterator2 = long unsigned int*; RandomAccessIterator3 = __gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> >; Compare = std::less<long unsigned int>]’:
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:60:11: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘tbb::task* pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; RandomAccessIterator2 = __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; RandomAccessIterator3 = std::__cxx11::basic_string<char>*; Compare = std::less<std::__cxx11::basic_string<char> >]’:
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:60:11: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘tbb::task* pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::execute() [with RandomAccessIterator1 = std::__cxx11::basic_string<char>*; RandomAccessIterator2 = std::__cxx11::basic_string<char>*; RandomAccessIterator3 = __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; Compare = std::less<std::__cxx11::basic_string<char> >]’:
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:60:11: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘tbb::task* pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<1u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<1u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<1u> > > >; RandomAccessIterator2 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<1u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<1u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<1u> > > >; RandomAccessIterator3 = hpx::parallel::tr1::detail::util::int_array<1u>*; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<1u> >]’:
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:60:11: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘tbb::task* pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::execute() [with RandomAccessIterator1 = hpx::parallel::tr1::detail::util::int_array<1u>*; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<1u>*; RandomAccessIterator3 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<1u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<1u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<1u> > > >; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<1u> >]’:
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:60:11: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘tbb::task* pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<1u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<1u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<1u> > > >; RandomAccessIterator2 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<1u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<1u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<1u> > > >; RandomAccessIterator3 = hpx::parallel::tr1::detail::util::int_array<1u>*; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<1u> >]’:
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:60:11: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘tbb::task* pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::execute() [with RandomAccessIterator1 = hpx::parallel::tr1::detail::util::int_array<1u>*; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<1u>*; RandomAccessIterator3 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<1u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<1u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<1u> > > >; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<1u> >]’:
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:60:11: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘tbb::task* pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<2u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<2u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<2u> > > >; RandomAccessIterator2 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<2u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<2u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<2u> > > >; RandomAccessIterator3 = hpx::parallel::tr1::detail::util::int_array<2u>*; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<2u> >]’:
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:60:11: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘tbb::task* pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::execute() [with RandomAccessIterator1 = hpx::parallel::tr1::detail::util::int_array<2u>*; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<2u>*; RandomAccessIterator3 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<2u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<2u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<2u> > > >; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<2u> >]’:
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:60:11: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘tbb::task* pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<2u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<2u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<2u> > > >; RandomAccessIterator2 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<2u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<2u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<2u> > > >; RandomAccessIterator3 = hpx::parallel::tr1::detail::util::int_array<2u>*; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<2u> >]’:
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:60:11: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘tbb::task* pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::execute() [with RandomAccessIterator1 = hpx::parallel::tr1::detail::util::int_array<2u>*; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<2u>*; RandomAccessIterator3 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<2u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<2u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<2u> > > >; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<2u> >]’:
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:60:11: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘tbb::task* pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<4u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<4u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<4u> > > >; RandomAccessIterator2 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<4u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<4u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<4u> > > >; RandomAccessIterator3 = hpx::parallel::tr1::detail::util::int_array<4u>*; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<4u> >]’:
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:60:11: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘tbb::task* pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::execute() [with RandomAccessIterator1 = hpx::parallel::tr1::detail::util::int_array<4u>*; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<4u>*; RandomAccessIterator3 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<4u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<4u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<4u> > > >; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<4u> >]’:
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:60:11: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘tbb::task* pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<4u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<4u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<4u> > > >; RandomAccessIterator2 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<4u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<4u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<4u> > > >; RandomAccessIterator3 = hpx::parallel::tr1::detail::util::int_array<4u>*; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<4u> >]’:
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:60:11: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘tbb::task* pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::execute() [with RandomAccessIterator1 = hpx::parallel::tr1::detail::util::int_array<4u>*; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<4u>*; RandomAccessIterator3 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<4u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<4u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<4u> > > >; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<4u> >]’:
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:60:11: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘tbb::task* pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<8u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<8u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<8u> > > >; RandomAccessIterator2 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<8u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<8u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<8u> > > >; RandomAccessIterator3 = hpx::parallel::tr1::detail::util::int_array<8u>*; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<8u> >]’:
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:60:11: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘tbb::task* pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::execute() [with RandomAccessIterator1 = hpx::parallel::tr1::detail::util::int_array<8u>*; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<8u>*; RandomAccessIterator3 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<8u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<8u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<8u> > > >; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<8u> >]’:
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:60:11: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘tbb::task* pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<8u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<8u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<8u> > > >; RandomAccessIterator2 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<8u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<8u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<8u> > > >; RandomAccessIterator3 = hpx::parallel::tr1::detail::util::int_array<8u>*; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<8u> >]’:
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:60:11: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘tbb::task* pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::execute() [with RandomAccessIterator1 = hpx::parallel::tr1::detail::util::int_array<8u>*; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<8u>*; RandomAccessIterator3 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<8u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<8u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<8u> > > >; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<8u> >]’:
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:60:11: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘tbb::task* pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<16u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<16u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<16u> > > >; RandomAccessIterator2 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<16u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<16u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<16u> > > >; RandomAccessIterator3 = hpx::parallel::tr1::detail::util::int_array<16u>*; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<16u> >]’:
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:60:11: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘tbb::task* pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::execute() [with RandomAccessIterator1 = hpx::parallel::tr1::detail::util::int_array<16u>*; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<16u>*; RandomAccessIterator3 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<16u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<16u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<16u> > > >; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<16u> >]’:
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:60:11: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘tbb::task* pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<16u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<16u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<16u> > > >; RandomAccessIterator2 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<16u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<16u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<16u> > > >; RandomAccessIterator3 = hpx::parallel::tr1::detail::util::int_array<16u>*; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<16u> >]’:
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:60:11: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘tbb::task* pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::execute() [with RandomAccessIterator1 = hpx::parallel::tr1::detail::util::int_array<16u>*; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<16u>*; RandomAccessIterator3 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<16u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<16u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<16u> > > >; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<16u> >]’:
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:60:11: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘tbb::task* pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<32u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<32u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<32u> > > >; RandomAccessIterator2 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<32u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<32u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<32u> > > >; RandomAccessIterator3 = hpx::parallel::tr1::detail::util::int_array<32u>*; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<32u> >]’:
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:60:11: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘tbb::task* pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::execute() [with RandomAccessIterator1 = hpx::parallel::tr1::detail::util::int_array<32u>*; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<32u>*; RandomAccessIterator3 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<32u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<32u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<32u> > > >; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<32u> >]’:
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:60:11: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘tbb::task* pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<32u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<32u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<32u> > > >; RandomAccessIterator2 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<32u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<32u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<32u> > > >; RandomAccessIterator3 = hpx::parallel::tr1::detail::util::int_array<32u>*; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<32u> >]’:
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:60:11: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘tbb::task* pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::execute() [with RandomAccessIterator1 = hpx::parallel::tr1::detail::util::int_array<32u>*; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<32u>*; RandomAccessIterator3 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<32u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<32u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<32u> > > >; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<32u> >]’:
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:60:11: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘tbb::task* pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<64u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<64u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<64u> > > >; RandomAccessIterator2 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<64u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<64u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<64u> > > >; RandomAccessIterator3 = hpx::parallel::tr1::detail::util::int_array<64u>*; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<64u> >]’:
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:60:11: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘tbb::task* pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::execute() [with RandomAccessIterator1 = hpx::parallel::tr1::detail::util::int_array<64u>*; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<64u>*; RandomAccessIterator3 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<64u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<64u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<64u> > > >; Compare = hpx::parallel::tr1::detail::util::H_comp<hpx::parallel::tr1::detail::util::int_array<64u> >]’:
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:60:11: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘tbb::task* pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::execute() [with RandomAccessIterator1 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<64u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<64u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<64u> > > >; RandomAccessIterator2 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<64u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<64u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<64u> > > >; RandomAccessIterator3 = hpx::parallel::tr1::detail::util::int_array<64u>*; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<64u> >]’:
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:60:11: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h: In instantiation of ‘tbb::task* pss::internal::merge_task<RandomAccessIterator1, RandomAccessIterator2, RandomAccessIterator3, Compare>::execute() [with RandomAccessIterator1 = hpx::parallel::tr1::detail::util::int_array<64u>*; RandomAccessIterator2 = hpx::parallel::tr1::detail::util::int_array<64u>*; RandomAccessIterator3 = __gnu_cxx::__normal_iterator<hpx::parallel::tr1::detail::util::int_array<64u>*, std::vector<hpx::parallel::tr1::detail::util::int_array<64u>, std::allocator<hpx::parallel::tr1::detail::util::int_array<64u> > > >; Compare = hpx::parallel::tr1::detail::util::L_comp<hpx::parallel::tr1::detail::util::int_array<64u> >]’:
/home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:294:2:   required from here
/home/francisco/Code/HPX_sort/benchmark/include/parallel_stable_sort/tbb-lowlevel/parallel_stable_sort.h:60:11: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
In file included from /home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp:23:0:
/home/francisco/Code/HPX_sort/include/hpx/parallel/algorithms/tr1/detail/util/file_vector.hpp: At global scope:
/home/francisco/Code/HPX_sort/include/hpx/parallel/algorithms/tr1/detail/util/file_vector.hpp:191:12: warning: ‘int hpx::parallel::tr1::detail::util::write_file_string(const std::vector<std::__cxx11::basic_string<char> >&, const string&)’ defined but not used [-Wunused-function]
 static int write_file_string (const std::vector<std::string> & V,
            ^~~~~~~~~~~~~~~~~
/home/francisco/Code/HPX_sort/include/hpx/parallel/algorithms/tr1/detail/util/file_vector.hpp:117:12: warning: ‘int hpx::parallel::tr1::detail::util::write_file_uint64(const std::vector<long unsigned int>&, const string&)’ defined but not used [-Wunused-function]
 static int write_file_uint64 (const std::vector<uint64_t> & V,
            ^~~~~~~~~~~~~~~~~
/home/francisco/Code/HPX_sort/include/hpx/parallel/algorithms/tr1/detail/util/file_vector.hpp:45:12: warning: ‘int hpx::parallel::tr1::detail::util::generate_file(const string&, size_t)’ defined but not used [-Wunused-function]
 static int generate_file(const std::string & filename, size_t NElem)
            ^~~~~~~~~~~~~
Finished building: /home/francisco/Code/HPX_sort/benchmark/Linux/benchmark.cpp
 
Building target: benchmark
Invoking: GCC C++ Linker
g++ -L/usr/local/lib -L/usr/lib/x86_64-linux-gnu -ldl -o "benchmark"  ./benchmark.o   -lpthread -lhpx -ldl -ltbb -lboost_system -lboost_atomic -lboost_program_options -lboost_chrono -lboost_thread
Finished building target: benchmark
 

11:50:35 Build Finished (took 1m:11s.300ms)

